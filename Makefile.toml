[config]
default_to_workspace = false

[env]
HOST = "0.0.0.0"
PORT = 18080
DATABASE_USERNAME = "app"
DATABASE_PASSWORD = "passwd"
DATABASE_NAME = "app"
DATABASE_PORT_OUTER = 5432
DATABASE_PORT_INNER = 5432
REDIS_PORT_OUTER = 6379
REDIS_PORT_INNER = 6379
AUTH_TOKEN_TTL = 86400

[tasks.set-env-docker.env]
DATABASE_HOST = "postgres"
DATABASE_PORT = "${DATABASE_PORT_INNER}"
DATABASE_URL = "postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}"
REDIS_HOST = "redis"
REDIS_PORT = "${REDIS_PORT_INNER}"
JAEGER_HOST = "jaeger"
JAEGER_PORT = 6831

[tasks.set-env-local.env]
DATABASE_HOST = "localhost"
DATABASE_PORT = "${DATABASE_PORT_OUTER}"
DATABASE_URL = "postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?user=${DATABASE_USERNAME}&password=${DATABASE_PASSWORD}"
REDIS_HOST = "localhost"
REDIS_PORT = "${REDIS_PORT_OUTER}"
JAEGER_HOST = "localhost"
JAEGER_PORT = 6831

# ビルド・実行に関するタスク群
[tasks.before-build]
run_task = [{ name = ["compose-up-db", "migrate", "compose-up-redis"] }]

[tasks.run]
extend = "set-env-local"
dependencies = ["before-build"]
command = "cargo"
args = ["run", "${@}"]

[tasks.build]
extend = "set-env-local"
dependencies = ["before-build"]
command = "cargo"
args = ["build", "${@}"]


# 開発補助用のタスク群
[tasks.fmt]
extend = "set-env-local"
command = "cargo"
args = ["fmt", "--all", "${@}"]

[tasks.clippy]
extend = "set-env-local"
command = "cargo"
args = ["clippy", "--all", "--all-targets", "${@}"]

[tasks.test]
extend = "set-env-local"
install_crate = {crate_name = "cargo-nextest", binary = "cargo", test_arg = ["nextest", "--help"]}
command = "cargo"
args = [
    "nextest", "run", "--workspace", "--status-level", "all", "--test-threads=1",  
]

[tasks.clippy-ci]
dependencies = ["before-build"]
run_task = "clippy"

[tasks.test-ci]
dependencies = ["before-build"]
run_task = "test"

# DB マイグレーション用のタスク群
[tasks.migrate]
extend = "set-env-local"
install_crate = {crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3"}
script = '''
#!/bin/bash
until sqlx migrate run --source adapter/migrations; do
    sleep 1
done
'''

[tasks.sqlx]
extend = "set-env-local"
install_crate = {crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3"}
command = "sqlx"
args = ["${@}", "--source", "adapter/migrations"]

# docker compose 操作用のタスク群
[tasks.compose]
extend = "set-env-docker"
command = "docker"
args = ["compose", "${@}"]

[tasks.compose-up-db]
extend = "set-env-docker"
command = "docker"
args = ["compose", "up", "-d", "postgres"]

[tasks.compose-up-redis]
extend = "set-env-docker"
command = "docker"
args = ["compose", "up", "-d", "redis"]

[tasks.compose-down]
extend = "set-env-docker"
command = "docker"
args = ["compose", "down"]

[tasks.compose-remove]
extend = "set-env-docker"
command = "docker"
args = ["compose", "down", "-v"]
